// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VetRegister.Infrastructure.Data;

#nullable disable

namespace VetRegister.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240323151720_DoctorNameColumn")]
    partial class DoctorNameColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "dea12856-c198-4129-b3f3-b893d8395082",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7a5aa2db-538b-4153-95e6-a5396899a1dd",
                            Email = "owner1@vet.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "owner1@vet.com",
                            NormalizedUserName = "owner1@vet.com",
                            PasswordHash = "AQAAAAEAACcQAAAAECEdrKLvGZrfi6gjr18bR+SgkY7C3cS1dwEty+nU05CGXyzBihjoMOAbRYSN7b/LCQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c25a0ea6-7101-4097-818c-42917a5b4c49",
                            TwoFactorEnabled = false,
                            UserName = "owner1@vet.com"
                        },
                        new
                        {
                            Id = "53ae2865-4a73-4974-ac06-eff5bf01b7f6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec56dd71-5c18-4e77-bd06-2ab892dd1890",
                            Email = "owner2@vet.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "owner2@vet.com",
                            NormalizedUserName = "owner2@vet.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEL2etau1/WluR7n2F0qEo31aL+8j1gQtC3AoI+zHJWqRwqbAilqPtU7uaqVf8VTZNg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "16096588-a430-4e84-8c3f-12a2652edca5",
                            TwoFactorEnabled = false,
                            UserName = "owner2@vet.com"
                        },
                        new
                        {
                            Id = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0a0140d8-aaa2-4848-ae99-cab1f77224c5",
                            Email = "doctor1@vet.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "doctor1@vet.com",
                            NormalizedUserName = "doctor1@vet.com",
                            PasswordHash = "AQAAAAEAACcQAAAAECI38CTw/G8K6jEtfPqGXW3weUc3y0E3eam4VHdPLT+imOMswxsPTLINqsswUkGWeA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d9b0bfba-ffc0-460b-971f-968a4a47b169",
                            TwoFactorEnabled = false,
                            UserName = "doctor1@vet.com"
                        },
                        new
                        {
                            Id = "9c862997-7dff-4c65-9510-8e0b29e1e877",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "22ba42d5-4108-44a0-83a0-6bbfb07467f7",
                            Email = "doctor2@vet.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "doctor2@vet.com",
                            NormalizedUserName = "doctor2@vet.com",
                            PasswordHash = "AQAAAAEAACcQAAAAEGReYsRQY6WSzTYcxRMPzljvBZkomLcYq/MIJM/8+DOyWWjJc7OVXTWAlz+N2Iz1Gw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5a2e4822-c501-4dff-b307-a74312935fc7",
                            TwoFactorEnabled = false,
                            UserName = "doctor2@vet.com"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Animal Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasComment("Animal Date Of Birth");

                    b.Property<bool>("GenderIsMale")
                        .HasColumnType("bit")
                        .HasComment("Animal Gender Is Male");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Animal Name");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int")
                        .HasComment("Owner Identifier");

                    b.Property<int>("SpecieId")
                        .HasColumnType("int")
                        .HasComment("Specie Identifier");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("SpecieId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2021, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderIsMale = true,
                            Name = "Dog1",
                            OwnerId = 1,
                            SpecieId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderIsMale = false,
                            Name = "Cat1",
                            OwnerId = 1,
                            SpecieId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderIsMale = false,
                            Name = "Fish1",
                            OwnerId = 2,
                            SpecieId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GenderIsMale = false,
                            Name = "Bird1",
                            OwnerId = 2,
                            SpecieId = 4
                        });
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Clinic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Clinic Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Clinic Name");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("Clinic Phone Number");

                    b.HasKey("Id");

                    b.ToTable("Clinics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Clinic1",
                            PhoneNumber = "0880000001"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clinic2",
                            PhoneNumber = "0880000002"
                        });
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Doctor Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClinicId")
                        .HasColumnType("int")
                        .HasComment("Clinic Identifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Doctor Name");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Identity User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("ClinicId");

                    b.HasIndex("UserId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClinicId = 1,
                            Name = "",
                            UserId = "6d5800ce-d726-4fc8-83d9-d6b3ac1f591e"
                        },
                        new
                        {
                            Id = 2,
                            ClinicId = 2,
                            Name = "",
                            UserId = "9c862997-7dff-4c65-9510-8e0b29e1e877"
                        });
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Owner Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Owner Address");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("Owner Phone Number");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasComment("Identity User Identifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Owner1 Address",
                            PhoneNumber = "0880000003",
                            UserId = "dea12856-c198-4129-b3f3-b893d8395082"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Owner2 Address",
                            PhoneNumber = "0880000004",
                            UserId = "53ae2865-4a73-4974-ac06-eff5bf01b7f6"
                        });
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Procedure Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int")
                        .HasComment("Animal Identifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2")
                        .HasComment("Procedure Creation Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Procedure Description");

                    b.Property<int>("DoctorId")
                        .HasColumnType("int")
                        .HasComment("Doctor Identifier");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DoctorId");

                    b.ToTable("Procedures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreatedOn = new DateTime(2024, 3, 23, 17, 17, 19, 802, DateTimeKind.Local).AddTicks(5437),
                            Description = "Operation",
                            DoctorId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CreatedOn = new DateTime(2024, 3, 23, 17, 17, 19, 802, DateTimeKind.Local).AddTicks(5468),
                            Description = "Vaccination",
                            DoctorId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CreatedOn = new DateTime(2024, 3, 23, 17, 17, 19, 802, DateTimeKind.Local).AddTicks(5471),
                            Description = "Blood Test",
                            DoctorId = 2
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CreatedOn = new DateTime(2024, 3, 23, 17, 17, 19, 802, DateTimeKind.Local).AddTicks(5472),
                            Description = "Nail Trimming",
                            DoctorId = 2
                        });
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Specie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasComment("Specie Identifier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Specie Name");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Dog"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fish"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bird"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Animal", b =>
                {
                    b.HasOne("VetRegister.Infrastructure.Data.Models.Owner", "Owner")
                        .WithMany("Animals")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VetRegister.Infrastructure.Data.Models.Specie", "Specie")
                        .WithMany("Animals")
                        .HasForeignKey("SpecieId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Specie");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.HasOne("VetRegister.Infrastructure.Data.Models.Clinic", "Clinic")
                        .WithMany("Doctors")
                        .HasForeignKey("ClinicId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Owner", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Procedure", b =>
                {
                    b.HasOne("VetRegister.Infrastructure.Data.Models.Animal", "Animal")
                        .WithMany("Procedures")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("VetRegister.Infrastructure.Data.Models.Doctor", "Doctor")
                        .WithMany("Procedures")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Animal", b =>
                {
                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Clinic", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Doctor", b =>
                {
                    b.Navigation("Procedures");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Owner", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("VetRegister.Infrastructure.Data.Models.Specie", b =>
                {
                    b.Navigation("Animals");
                });
#pragma warning restore 612, 618
        }
    }
}
